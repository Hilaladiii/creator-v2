generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  username String @unique
  email String @unique
  fullname String
  address String
  phone String
  isVerified Boolean @default(false)
  verificationToken String
  emailVerified DateTime?
  image String?
  password String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
  
  role Role @default(USER)
  accounts Account[]
  proposals Proposal[]  

}

enum Role{
  SPEAKER
  USER
}


model Account{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId],references: [id], onDelete:Cascade)
  @@unique([provider,providerAccountId])

}

enum Status{
  WAITING
  ACCEPTED
  REJECTED
}

model Proposal{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String
  status Status @default(WAITING)

  companyId String @db.ObjectId
  company Company @relation(fields: [companyId],references: [id])
  userId String @db.ObjectId
  user User @relation(fields: [userId],references: [id])
}

enum Category{
  TECHNOLOGY
  HEALTH
  ECONOMICS
  PSYCHOLOGY
  EDUCATION
  ENVIRONMENT
  POLITICS
}

model Company{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  Description String
  category Category

  proposals Proposal[]
}


model Speaker{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  name String 
  Location String
  price Float
  description String
  photo String
}

